# Load ggplot2 library
library(ggplot2)
# Define the function
f <- function(t) {
(2*t + t^2) / (t + 1)
}
# Create a data frame with t values and their corresponding y values
t_values <- seq(-10, 10, by = 0.1)
y_values <- sapply(t_values, f)
data <- data.frame(t = t_values, y = y_values)
# Plot using ggplot2
ggplot(data, aes(x = t, y = y)) +
geom_line(color = "blue") +
labs(title = expression(y == frac(2*t + t^2, t + 1)),
x = "t",
y = "y") +
theme_minimal()
View(data)
?expression()
t <- seq(0,10, by=0.1)
c_1 <- 2
c_2 <- 4
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(jtools)
library(scales)
library(latex2exp)
library(deSolve)
library(ggforce) #for geom_circle()
library(phaseR)
t <- seq(0,10, by=0.1)
c_1 <- 2
c_2 <- 4
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
theme_minimal()
t <- seq(0,5, by=0.1)
c_1 <- 2
c_2 <- 4
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
theme_minimal()
t <- seq(0,5, by=0.1)
c_1 <- 1
c_2 <- 2
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
theme_minimal()
t <- seq(0,5, by=0.1)
c_1 <- 1
c_2 <- 2
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
annotate("text", fontface = "bold", x = 2.78, y = 1.7,
label = "y == \frac{5te^{2t}}{3} + C[1] e^{2t} + C[2] e^{-t}", parse = TRUE, size = 4) +
theme_minimal()
t <- seq(0,5, by=0.1)
c_1 <- 1
c_2 <- 2
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
annotate("text", fontface = "bold", x = 2.78, y = 1.7,
label = "y == \frac{5t e^{2t}}{3} + C[1] e^{2t} + C[2] e^{-t}", parse = TRUE, size = 4) +
theme_minimal()
t <- seq(0,5, by=0.1)
c_1 <- 1
c_2 <- 2
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
annotate("text", fontface = "bold", x = 2.78, y = 1.7,
label = "y == (5te^{2t})/3 + C[1] e^{2t} + C[2] e^{-t}", parse = TRUE, size = 4) +
theme_minimal()
t <- seq(0,5, by=0.1)
c_1 <- 1
c_2 <- 2
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
annotate("text", fontface = "bold", x = 2.78, y = 1.7,
label = "y == (5t e^{2t})/3 + C[1] e^{2t} + C[2] e^{-t}", parse = TRUE, size = 4) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 1
c_2 <- 2
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- -0.5
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = expression("C_1==0.1")) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = expression("C[1]==0.1")) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
subtitle_expression <- "C[1]==0.1"
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = parse(text = subtitle_expression)) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
subtitle_expression <- "C[1]==0.1 and C[2]==0.7"
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = parse(text = subtitle_expression)) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
subtitle_expression <- "C[1]==0.1, C[2]==0.7"
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = parse(text = subtitle_expression)) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
subtitle_expression <- "C[1]==0.1 C[2]==0.7"
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = parse(text = subtitle_expression)) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
subtitle_expression <- "C[1]==0.1"
subtitle_expression_2 <- "C[2]==0.7"
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = parse(text = subtitle_expression <br> subtitle_expression_2)) +
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
subtitle_expression <- "C[1]==0.1"
subtitle_expression_2 <- "C[2]==0.7"
ggplot(df, aes(x=t,y=y)) +
geom_smooth(color="blue", se = FALSE, linewidth=1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = parse(text = subtitle_expression, subtitle_expression_2)) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
subtitle_expression <- "C[1]==0.1"
subtitle_expression_2 <- "C[2]==0.7"
# Combine the two expressions
combined_expression <- paste(subtitle_expression, subtitle_expression_2, sep = ", ")
ggplot(df, aes(x = t, y = y)) +
geom_smooth(color = "blue", se = FALSE, linewidth = 1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = parse(text = combined_expression)) +
theme_minimal()
# Combine the two expressions
combined_expression <- paste(subtitle_expression, subtitle_expression_2, sep = ", ")
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
caption_text <- bquote(C[1] == .(c_1) ~ "," ~ C[2] == .(c_2))
ggplot(df, aes(x = t, y = y)) +
geom_smooth(color = "blue", se = FALSE, linewidth = 1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = caption_text) +
theme_minimal()
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
caption_text <- bquote(Assumed, C[1] == .(c_1) ~ "," ~ C[2] == .(c_2))
t <- seq(0,4, by=0.1)
c_1 <- 0.1
c_2 <- 0.7
y <- (5*t*exp(2*t))/(3)+c_1*exp(2*t)+c_2*exp(-t)
df <- data.frame(t=t, y=y)
caption_text <- bquote(C[1] == .(c_1) ~ "," ~ C[2] == .(c_2))
ggplot(df, aes(x = t, y = y)) +
geom_smooth(color = "blue", se = FALSE, linewidth = 1) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
labs(caption = caption_text) +
theme_minimal()
